import { SupportedChainId } from '@cowprotocol/cow-sdk';

import createClient from 'openapi-fetch';
import type { paths } from '../gen/coingecko/coingecko-pro-types';

import type { components } from '../gen/coingecko/coingecko-pro-types';

export const COINGECKO_PRO_BASE_URL = 'https://pro-api.coingecko.com';

export const SUPPORTED_COINGECKO_PLATFORMS: Record<
  SupportedChainId,
  string | undefined
> = {
  [SupportedChainId.SEPOLIA]: undefined,
  [SupportedChainId.MAINNET]: 'ethereum',
  [SupportedChainId.GNOSIS_CHAIN]: 'xdai',
  [SupportedChainId.ARBITRUM_ONE]: 'arbitrum-one',
  [SupportedChainId.BASE]: 'base',
  [SupportedChainId.POLYGON]: 'polygon-pos',
  [SupportedChainId.AVALANCHE]: 'avalanche',
  [SupportedChainId.LENS]: 'lens',
  [SupportedChainId.BNB]: 'binance-smart-chain',
};

/**
 * Map of chain IDs to Coingecko platform IDs, for every platform that has a network id.
 * The platform ID is used to identify the blockchain on Coingecko.
 * https://api.coingecko.com/api/v3/asset_platforms
 */
export const COINGECKO_PLATFORMS: Record<number, string | undefined> = {
  ...SUPPORTED_COINGECKO_PLATFORMS,
  [10]: 'optimistic-ethereum',
  [10000]: 'smartbch',
  [100009]: 'vechain',
  [10201]: 'maxxchain',
  [10241024]: 'alienx',
  [1030]: 'conflux',
  [106]: 'velas',
  [108]: 'thundercore',
  [1088]: 'metis-andromeda',
  [1101]: 'polygon-zkevm',
  [1111]: 'wemix-network',
  [111188]: 're-al',
  [1116]: 'core',
  [11235]: 'haqq-network',
  [1130]: 'defichain-evm',
  [1135]: 'lisk',
  [11501]: 'bevm',
  [11820]: 'artela',
  [119]: 'enuls',
  [1209]: 'saita-chain',
  [122]: 'fuse',
  [1231]: 'ultron',
  [1234]: 'step-network',
  [12553]: 'rss3-vsl',
  [128]: 'huobi-token',
  [1284]: 'moonbeam',
  [1285]: 'moonriver',
  [130]: 'unichain',
  [1313161554]: 'aurora',
  [1329]: 'sei-v2',
  [13371]: 'immutable',
  [1339]: 'elysium',
  [1380012617]: 'rari',
  [14]: 'flare-network',
  [146]: 'sonic',
  [148]: 'shimmer_evm',
  [1480]: 'vana',
  [151]: 'redbelly-network',
  [1514]: 'story',
  [1559]: 'tenet',
  [16116]: 'defiverse',
  [1625]: 'gravity-alpha',
  [16507]: 'genesys-network',
  [1666600000]: 'harmony-shard-0',
  [167000]: 'taiko',
  [16718]: 'airdao',
  [169]: 'manta-pacific',
  [17777]: 'eos-evm',
  [18159]: 'proof-of-memes',
  [185]: 'mint',
  [1868]: 'soneium',
  [18686]: 'moonchain',
  [18888]: 'titanchain',
  [1890]: 'lightlink',
  [19]: 'songbird',
  [1907]: 'Bitcichain',
  [1923]: 'swellchain',
  [196]: 'x-layer',
  [19880818]: 'deepbrain-chain',
  [199]: 'bittorrent',
  [1996]: 'sanko',
  [20]: 'elastos',
  [2000]: 'dogechain',
  [2001]: 'milkomeda-cardano',
  [200901]: 'bitlayer',
  [2016]: 'mainnetz',
  [2020]: 'ronin',
  [204]: 'opbnb',
  [2040]: 'vanar-chain',
  [2046399126]: 'skale',
  [21000000]: 'corn',
  [210425]: 'platon-network',
  [2222]: 'kava',
  [22776]: 'map-protocol',
  [23294]: 'oasis-sapphire',
  [2342]: 'omnia',
  [2345]: 'goat',
  [24]: 'kardiachain',
  [2415]: 'xodex',
  [245022934]: 'neon-evm',
  [248]: 'oasys',
  [25]: 'cronos',
  [250]: 'fantom',
  [252]: 'fraxtal',
  [2525]: 'inevm',
  [255]: 'kroma',
  [2611]: 'redlight-chain',
  [2741]: 'abstract',
  [27563]: 'onchain',
  [2818]: 'morph-l2',
  [288]: 'boba',
  [295]: 'hedera-hashgraph',
  [30]: 'rootstock',
  [311]: 'omax',
  [314]: 'filecoin',
  [321]: 'kucoin-community-chain',
  [322202]: 'parex-network',
  [324]: 'zksync',
  [32520]: 'bitgert',
  [32769]: 'zilliqa-evm',
  [33139]: 'apechain',
  [333000333]: 'meld',
  [333999]: 'polis-chain',
  [336]: 'shiden network',
  [33979]: 'funki',
  [34443]: 'mode',
  [35441]: 'q-mainnet',
  [361]: 'theta',
  [369]: 'pulsechain',
  [3693]: 'empire',
  [3776]: 'astar-zkevm',
  [3797]: 'alverychain',
  [388]: 'cronos-zkevm',
  [39797]: 'energi',
  [40]: 'telos',
  [4061]: 'nahmii',
  [416]: 'sx-network',
  [4162]: 'sx-rollup',
  [41923]: 'edu-chain',
  [42]: 'lukso',
  [4200]: 'merlin-chain',
  [42170]: 'arbitrum-nova',
  [42220]: 'celo',
  [42262]: 'oasis',
  [42793]: 'etherlink',
  [4337]: 'beam',
  [440017]: 'graphite-network',
  [4689]: 'iotex',
  [480]: 'world-chain',
  [48900]: 'zircuit',
  [50]: 'xdc-network',
  [5000]: 'mantle',
  [50104]: 'sophon',
  [5112]: 'ham',
  [5165]: 'bahamut',
  [52]: 'coinex-smart-chain',
  [520]: 'xt-smart-chain',
  [52014]: 'electroneum',
  [530]: 'function-x',
  [5330]: 'superseed',
  [534352]: 'scroll',
  [53935]: 'defi-kingdoms-blockchain',
  [5464]: 'saga',
  [5545]: 'duckchain',
  [56288]: 'boba-bnb',
  [57]: 'syscoin',
  [570]: 'rollux',
  [57073]: 'ink',
  [59144]: 'linea',
  [592]: 'astar',
  [6001]: 'bouncebit',
  [61]: 'ethereum-classic',
  [614]: 'graphlinq-chain',
  [622277]: 'hypra-network',
  [62621]: 'multivac',
  [648]: 'endurance',
  [66]: 'okex-chain',
  [660279]: 'xai',
  [6661]: 'cybria',
  [666666666]: 'degen',
  [690]: 'redstone',
  [6942]: 'laikachain',
  [70]: 'hoo-smart-chain',
  [7000]: 'zetachain',
  [7070]: 'planq-network',
  [7171]: 'bitrock',
  [7225878]: 'saakuru',
  [73115]: 'icb-network',
  [747]: 'flow-evm',
  [7560]: 'cyber',
  [766]: 'ql1',
  [7700]: 'canto',
  [7777777]: 'zora-network',
  [78887]: 'lung-chain',
  [800001]: 'octaspace',
  [80094]: 'berachain',
  [810180]: 'zklink-nova',
  [813]: 'qitmeer-network',
  [81457]: 'blast',
  [82]: 'meter',
  [8217]: 'klay-token',
  [83872]: 'zedxion',
  [841]: 'taraxa',
  [8668]: 'hela',
  [88]: 'tomochain',
  [8822]: 'iota-evm',
  [888]: 'wanchain',
  [88811]: 'units-network',
  [888888888]: 'ancient8',
  [8889]: 'vyvo-smart-chain',
  [8899]: 'jibchain',
  [9001]: 'evmos',
  [9008]: 'shido',
  [96]: 'bitkub-chain',
  [9898]: 'larissa',
  [9980]: 'combo',
  [999]: 'hyperevm',
};

export type CoingeckoProClient = ReturnType<typeof createClient<paths>>;

let coingeckoProClient: CoingeckoProClient | undefined;

export function getCoingeckoProClient(): CoingeckoProClient {
  if (coingeckoProClient) {
    return coingeckoProClient;
  }

  if (!process.env.COINGECKO_API_KEY) {
    throw new Error('COINGECKO_API_KEY is not set');
  }

  coingeckoProClient = createClient<paths>({
    baseUrl: COINGECKO_PRO_BASE_URL + '/api/v3',
    headers: {
      'x-cg-pro-api-key': process.env.COINGECKO_API_KEY,
    },
  });
  return coingeckoProClient;
}

export type SimplePriceItem = components['schemas']['SimplePrice'];
export type SimplePriceResponse = Record<string, SimplePriceItem>;
